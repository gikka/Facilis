@model Facilis.MVC.ViewModels.CupomViewModel

@{
    ViewBag.Title = "Alterar cupom";
}

<h2>Alterar cupom de desconto</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="container-fluid">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CupomId)

        <div class="form-group row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.EventoId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.EventoId, ViewBag.EventoList as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventoId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.PercentualDesconto, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PercentualDesconto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PercentualDesconto, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Validade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Validade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Validade, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-12">
                <input type="submit" value="Gravar" class="btn btn-primary" />
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
