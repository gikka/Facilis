@model Facilis.Infra.CrossCutting.Identity.Model.RegisterViewModel

@{
    ViewBag.Title = "Alterar Meus Dados";
}

<h2>Alterar cadastro</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Sexo, ViewBag.SexoList as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("EstadoId", null, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.CidadeId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("CidadeId", null, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CidadeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-10">
                <input type="submit" value="Gravar" class="btn btn-primary" />
                @Html.ActionLink("Voltar", "Index", "Home", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
